services:
  
  mssql:
    container_name: sql-server
    image: mcr.microsoft.com/mssql/server:2022-latest
    restart: unless-stopped
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: "0bd7903b-f568-4894-8d72-3c1b507e5644"
    volumes:
      - /Users/dmitry/Documents/Databases/mssql:/var/opt/mssql/data
    ports:
      - "1433:1433"

  todos.sql:
    container_name: postgres_todos_container
    image: postgres:14.8-alpine3.18
    command:
      - "postgres"
      - "-c"
      - "max_connections=50"
      - "-c"
      - "shared_buffers=1GB"
      - "-c"
      - "effective_cache_size=4GB"
      - "-c"
      - "work_mem=16MB"
      - "-c"
      - "maintenance_work_mem=512MB"
      - "-c"
      - "random_page_cost=1.1"
      - "-c"
      - "temp_file_limit=2GB"
      - "-c"
      - "log_min_duration_statement=200ms"
      - "-c" 
      - "idle_in_transaction_session_timeout=5min"
      - "-c"
      - "lock_timeout=1s"
      - "-c"
      - "statement_timeout=60s"
      - "-c"
      - "shared_preload_libraries=pg_stat_statements"
      - "-c"
      - "pg_stat_statements.max=10000"
      - "-c"
      - "pg_stat_statements.track=all"
    environment:
      POSTGRES_DB: "Todos"
      POSTGRES_USER: "TodosUser"
      POSTGRES_PASSWORD: "12345678"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - ../AppDatabase:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        
  proxy:
    container_name: proxy_container
    image: nginx:mainline
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    restart: unless-stopped
    ports:
      - "80:80"

  todos.api:
    image: todos.api
    build:
      context: .
      dockerfile: ToDoMicroservice/Todos.Api/Dockerfile
    restart: unless-stopped
    ports:
      - "8081:8080"

  auth.api:
    image: auth.api
    build:
      context: .
      dockerfile: Apis/Auth.Api/Dockerfile
    restart: unless-stopped
    ports:
      - "8082:8080"

  users.api:
    image: users.api
    build:
      context: .
      dockerfile: Apis/Users.Api/Dockerfile
    restart: unless-stopped
    ports:
      - "8083:8080"
